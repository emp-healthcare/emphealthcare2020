/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gatewayguiswing;

import java.awt.Color;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PrintWriter;
import java.sql.Timestamp;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Timer;
import java.util.TimerTask;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.microedition.io.Connector;
import javax.microedition.io.StreamConnection;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.ListModel;
import javax.swing.SwingUtilities;
import javax.ws.rs.client.Client;
import javax.ws.rs.client.ClientBuilder;
import javax.ws.rs.client.Entity;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.Response;

/**
 *
 * @author blunt
 */
public class Home extends javax.swing.JFrame {

    //Sensor Bluetooth Parameter
    private static String commande = "";
    private static Timer timer;
    private static OutputStream os = null;
    private static InputStream is = null;
    private static StreamConnection streamConnection = null;
    private static String hc05Url = "";
    private boolean start = false;
    private PrintWriter writer = null;
    private BufferedWriter writer2 = null;
    int i = 0;
    private boolean Calcul = false;

    List<Integer> l = new ArrayList<>();
    Runnable r;

    DefaultListModel modelSymptom = new DefaultListModel();
    List<String> addedSymptom = new ArrayList<>();

    public Home() {

        initComponents();
        this.setResizable(false);
        this.BPT.setEnabled(false);
        this.BTT.setEnabled(false);
        this.GLT.setEnabled(false);
        this.PRT.setEnabled(false);
        this.RRT.setEnabled(false);

        this.BP.setBackground(Color.red);
        this.BT.setBackground(Color.red);
        this.GL.setBackground(Color.red);
        this.PR.setBackground(Color.red);
        this.RR.setBackground(Color.red);

        //La liste des symptomes
        DefaultListModel model = new DefaultListModel();
        model.addElement("Abdominal pain");
        model.addElement("Constipation");
        model.addElement("Cough ");
        model.addElement("Diarrhea");
        model.addElement("Difficulty swallowing");
        model.addElement("Dizziness");
        model.addElement("Foot pain or ankle pain");
        model.addElement("Headache");
        model.addElement("Heart palpitations");
        model.addElement("Hip pain ");
        model.addElement("Knee pain");
        model.addElement("Low back");
        model.addElement("Neck pain");
        model.addElement("");
        model.addElement("Shortness of breath");
        model.addElement("");

        model.addElement("");
        model.addElement("");
        model.addElement("");
        model.addElement("");

        symptomes.setModel(model);
        symptomes2.setModel(modelSymptom);

        modelSymptom.clear();

    }

    private List<String> sensorsList() {

        BufferedReader in = null;
        try {
            //From File
            in = new BufferedReader(new FileReader("Ressources/sensorsList.txt"));
            String line;
            List<String> s = new ArrayList<>();
            while ((line = in.readLine()) != null) {
                s.add(line);
            }
            in.close();
            return s;
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                in.close();
            } catch (IOException ex) {
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        return null;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        Vitals = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jSeparator2 = new javax.swing.JSeparator();
        BP = new javax.swing.JPanel();
        BPT = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        available4 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        BT = new javax.swing.JPanel();
        BTT = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        available1 = new javax.swing.JLabel();
        jSeparator6 = new javax.swing.JSeparator();
        jSeparator11 = new javax.swing.JSeparator();
        PR = new javax.swing.JPanel();
        PRT = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        available5 = new javax.swing.JLabel();
        RR = new javax.swing.JPanel();
        RRT = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        available2 = new javax.swing.JLabel();
        jSeparator9 = new javax.swing.JSeparator();
        available6 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        GL = new javax.swing.JPanel();
        GLT = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        available3 = new javax.swing.JLabel();
        jSeparator12 = new javax.swing.JSeparator();
        available = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        viewSigns = new javax.swing.JButton();
        jSeparator8 = new javax.swing.JSeparator();
        wait = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        t = new javax.swing.JTextField();
        AP = new javax.swing.JTextField();
        g = new javax.swing.JTextField();
        hr = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        saveAndSend = new javax.swing.JButton();
        save = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        imc = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        weight = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        alerte = new javax.swing.JLabel();
        Height = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        bf = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        comment = new javax.swing.JTextArea();
        jLabel28 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        save1 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        symptomes = new javax.swing.JList<>();
        remmove = new javax.swing.JButton();
        add = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        symptomes2 = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(649, 361));
        setResizable(false);

        jPanel2.setBackground(new java.awt.Color(0, 153, 0));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setBackground(new java.awt.Color(204, 204, 255));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 102, 0));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("Icons/account.png")));
        jButton1.setText("Profile    ");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 210, 140, 40));

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton3.setForeground(new java.awt.Color(0, 102, 0));
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("Icons/chat.png")));
        jButton3.setText("Messages   ");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, 140, 40));

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton2.setForeground(new java.awt.Color(0, 102, 0));
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("Icons/sensor.png")));
        jButton2.setText("Sensors     ");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, 140, 40));

        jButton5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton5.setForeground(new java.awt.Color(0, 102, 0));
        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("Icons/heart.png")));
        jButton5.setText("Vital Signs");
        jButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton5MouseClicked(evt);
            }
        });
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 140, 40));

        jButton4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("Icons/settings.png")));
        jButton4.setText("Settings");
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton4MouseClicked(evt);
            }
        });
        jPanel2.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(31, 280, -1, 40));

        Vitals.setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setPreferredSize(new java.awt.Dimension(560, 100));
        jPanel1.setLayout(null);

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jPanel1.add(jSeparator2);
        jSeparator2.setBounds(660, 50, 2, 160);

        BP.setBackground(new java.awt.Color(255, 102, 102));
        BP.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        BPT.setText(" ");
        BP.add(BPT, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 50, 30));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Blood pressure");
        BP.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel7.setText("mmHg");
        BP.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 50, -1, -1));

        available4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        available4.setForeground(new java.awt.Color(255, 255, 255));
        available4.setText("Not available");
        BP.add(available4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, -1, -1));

        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);
        BP.add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 10, 110));

        jPanel1.add(BP);
        BP.setBounds(110, 40, 110, 110);

        BT.setBackground(new java.awt.Color(255, 153, 153));
        BT.setForeground(new java.awt.Color(255, 153, 153));
        BT.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        BT.add(BTT, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 60, 30));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setText("°C");
        BT.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 50, -1, -1));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Temperature");
        BT.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, -1));

        available1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        available1.setForeground(new java.awt.Color(255, 255, 255));
        available1.setText("Not available");
        BT.add(available1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, -1, -1));

        jSeparator6.setOrientation(javax.swing.SwingConstants.VERTICAL);
        BT.add(jSeparator6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 10, 160));

        jSeparator11.setOrientation(javax.swing.SwingConstants.VERTICAL);
        BT.add(jSeparator11, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 10, 160));

        jPanel1.add(BT);
        BT.setBounds(0, 40, 110, 110);

        PR.setBackground(new java.awt.Color(255, 51, 51));
        PR.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        PRT.setText(" ");
        PR.add(PRT, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 60, 30));

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel8.setText("Bpm");
        PR.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 50, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("ECG");
        PR.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 10, -1, -1));

        jSeparator4.setOrientation(javax.swing.SwingConstants.VERTICAL);
        PR.add(jSeparator4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 10, 110));

        available5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        available5.setForeground(new java.awt.Color(255, 255, 255));
        available5.setText("Not available");
        PR.add(available5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, -1, -1));

        jPanel1.add(PR);
        PR.setBounds(220, 40, 110, 110);

        RR.setBackground(new java.awt.Color(255, 0, 0));
        RR.setForeground(new java.awt.Color(255, 0, 51));
        RR.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        RRT.setText(" ");
        RR.add(RRT, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 60, 30));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Respiration rate");
        RR.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        available2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        available2.setForeground(new java.awt.Color(255, 255, 255));
        available2.setText("Not available");
        RR.add(available2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, -1, -1));

        jSeparator9.setOrientation(javax.swing.SwingConstants.VERTICAL);
        RR.add(jSeparator9, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 10, 160));

        available6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        available6.setForeground(new java.awt.Color(255, 255, 255));
        available6.setText("Not available");
        RR.add(available6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, -1, -1));

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel11.setText("Bth/m");
        RR.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 50, -1, -1));

        jPanel1.add(RR);
        RR.setBounds(330, 40, 120, 110);

        GL.setBackground(new java.awt.Color(255, 0, 51));
        GL.setLayout(null);

        GLT.setText(" ");
        GL.add(GLT);
        GLT.setBounds(10, 40, 60, 30);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Glucose level");
        GL.add(jLabel4);
        jLabel4.setBounds(20, 10, 77, 15);

        available3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        available3.setForeground(new java.awt.Color(255, 255, 255));
        available3.setText("Not available");
        GL.add(available3);
        available3.setBounds(10, 120, 88, 17);

        jSeparator12.setOrientation(javax.swing.SwingConstants.VERTICAL);
        GL.add(jSeparator12);
        jSeparator12.setBounds(0, 0, 10, 160);

        available.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        available.setForeground(new java.awt.Color(255, 255, 255));
        available.setText("Not available");
        GL.add(available);
        available.setBounds(10, 80, 88, 17);

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setText("g/L");
        GL.add(jLabel6);
        jLabel6.setBounds(80, 50, 18, 15);

        jPanel1.add(GL);
        GL.setBounds(450, 40, 110, 110);

        viewSigns.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        viewSigns.setForeground(new java.awt.Color(0, 102, 0));
        viewSigns.setText("Start");
        viewSigns.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                viewSignsMouseClicked(evt);
            }
        });
        jPanel1.add(viewSigns);
        viewSigns.setBounds(210, 200, 130, 50);

        jSeparator8.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jPanel1.add(jSeparator8);
        jSeparator8.setBounds(340, 40, 10, 110);

        wait.setText(" ");
        jPanel1.add(wait);
        wait.setBounds(20, 250, 310, 14);

        Vitals.addTab("Sensors", jPanel1);

        jPanel4.setLayout(null);
        jPanel4.add(t);
        t.setBounds(130, 180, 70, 30);

        AP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                APActionPerformed(evt);
            }
        });
        jPanel4.add(AP);
        AP.setBounds(130, 20, 70, 30);
        jPanel4.add(g);
        g.setBounds(130, 60, 70, 30);
        jPanel4.add(hr);
        hr.setBounds(130, 100, 70, 30);

        jLabel12.setText("mmHg");
        jPanel4.add(jLabel12);
        jLabel12.setBounds(210, 30, 40, 14);

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel13.setText("Comment");
        jPanel4.add(jLabel13);
        jLabel13.setBounds(280, 140, 110, 17);

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel14.setText("Arterial Pressure");
        jPanel4.add(jLabel14);
        jLabel14.setBounds(20, 30, 110, 17);

        jLabel16.setText("°C");
        jPanel4.add(jLabel16);
        jLabel16.setBounds(210, 190, 30, 14);

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel17.setText("Heart Rate");
        jPanel4.add(jLabel17);
        jLabel17.setBounds(20, 110, 80, 17);

        jLabel18.setText("bpm");
        jPanel4.add(jLabel18);
        jLabel18.setBounds(210, 110, 30, 14);

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel19.setText("Glycimie");
        jPanel4.add(jLabel19);
        jLabel19.setBounds(20, 70, 90, 17);

        saveAndSend.setIcon(new javax.swing.ImageIcon(getClass().getResource("Icons/saveAndSend.png")));
        saveAndSend.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                saveAndSendMouseClicked(evt);
            }
        });
        jPanel4.add(saveAndSend);
        saveAndSend.setBounds(130, 250, 70, 40);

        save.setIcon(new javax.swing.ImageIcon(getClass().getResource("Icons/save.png")));
        save.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                saveMouseClicked(evt);
            }
        });
        jPanel4.add(save);
        save.setBounds(40, 250, 73, 40);

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel20.setText("IMC");
        jPanel4.add(jLabel20);
        jLabel20.setBounds(20, 150, 80, 17);
        jPanel4.add(imc);
        imc.setBounds(130, 140, 70, 30);

        jLabel21.setText("Kg");
        jPanel4.add(jLabel21);
        jLabel21.setBounds(500, 110, 40, 14);

        jLabel22.setText("g/L");
        jPanel4.add(jLabel22);
        jLabel22.setBounds(210, 70, 29, 14);

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel15.setText("Temperarture");
        jPanel4.add(jLabel15);
        jLabel15.setBounds(20, 190, 100, 17);
        jPanel4.add(weight);
        weight.setBounds(420, 100, 70, 30);

        jLabel23.setText("Kg/m");
        jPanel4.add(jLabel23);
        jLabel23.setBounds(210, 150, 30, 14);

        alerte.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        alerte.setForeground(new java.awt.Color(204, 0, 0));
        alerte.setText(" ");
        jPanel4.add(alerte);
        alerte.setBounds(10, 290, 370, 15);
        jPanel4.add(Height);
        Height.setBounds(420, 60, 70, 30);

        jLabel24.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel24.setText("Breathing Frequency");
        jPanel4.add(jLabel24);
        jLabel24.setBounds(280, 30, 140, 17);
        jPanel4.add(bf);
        bf.setBounds(420, 20, 70, 30);

        jLabel25.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel25.setText("Height");
        jPanel4.add(jLabel25);
        jLabel25.setBounds(280, 70, 110, 17);

        jLabel26.setText("Bth/m");
        jPanel4.add(jLabel26);
        jLabel26.setBounds(500, 30, 40, 14);

        jLabel27.setText("m");
        jPanel4.add(jLabel27);
        jLabel27.setBounds(500, 70, 40, 14);

        comment.setColumns(20);
        comment.setRows(5);
        jScrollPane1.setViewportView(comment);

        jPanel4.add(jScrollPane1);
        jScrollPane1.setBounds(280, 170, 210, 120);

        jLabel28.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel28.setText("Weight");
        jPanel4.add(jLabel28);
        jLabel28.setBounds(280, 110, 110, 17);

        Vitals.addTab("Vitals", jPanel4);

        jPanel5.setLayout(null);

        save1.setIcon(new javax.swing.ImageIcon(getClass().getResource("Icons/save.png")));
        save1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                save1MouseClicked(evt);
            }
        });
        jPanel5.add(save1);
        save1.setBounds(400, 260, 73, 40);

        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("Icons/saveAndSend.png")));
        jPanel5.add(jButton7);
        jButton7.setBounds(480, 260, 70, 40);

        symptomes.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(symptomes);

        jPanel5.add(jScrollPane2);
        jScrollPane2.setBounds(10, 20, 230, 230);

        remmove.setIcon(new javax.swing.ImageIcon(getClass().getResource("Icons/moins.png")));
        remmove.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                remmoveMouseClicked(evt);
            }
        });
        jPanel5.add(remmove);
        remmove.setBounds(250, 130, 73, 30);

        add.setIcon(new javax.swing.ImageIcon(getClass().getResource("Icons/add.png")));
        add.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addMouseClicked(evt);
            }
        });
        jPanel5.add(add);
        add.setBounds(250, 95, 73, 30);

        symptomes2.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane3.setViewportView(symptomes2);

        jPanel5.add(jScrollPane3);
        jScrollPane3.setBounds(330, 20, 230, 230);

        Vitals.addTab("symptoms ", jPanel5);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Vitals, javax.swing.GroupLayout.PREFERRED_SIZE, 573, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(Vitals)
                .addGap(6, 6, 6))
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
        PatientInformation PI = new PatientInformation();
        PI.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton1MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        // TODO add your handling code here:
        Sensors s = new Sensors();
        s.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton2MouseClicked

    private void jButton4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseClicked
        // TODO add your handling code here:
        AdminAuth aa = new AdminAuth();
        aa.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton4MouseClicked

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
        // TODO add your handling code here:
        DoctorContact dc = new DoctorContact();
        dc.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton3MouseClicked

    private void jButton5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5MouseClicked
        /*        // TODO add your handling code here:
        MySigns h = new MySigns();
        h.setVisible(true);
        this.dispose();*/
    }//GEN-LAST:event_jButton5MouseClicked

    private void viewSignsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_viewSignsMouseClicked
        // TODO add your handling code here:
        if (!viewSigns.getText().equals("Stop")) {

            viewSigns.setForeground(Color.red);
            viewSigns.setEnabled(false);
            jButton1.setVisible(false);
            jButton2.setVisible(false);
            jButton5.setVisible(false);
            jButton3.setVisible(false);
            jButton4.setVisible(false);
            wait.setText("This may take few time ...");

            //Cherchant les capteurs connectés :
            //Getting Sensors List and search by type :
            List<String> sensorsNames = sensorsList();
            List<Sensor> sensorsDATA = new ArrayList<Sensor>();

            for (String s : sensorsNames) {
                try {
                    sensorsDATA.add(searchSensorByName(s));
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(MySigns.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

            for (int i = 0; i < sensorsDATA.size(); i++) {
                if (sensorsDATA.get(i).getType().equals("Temperature")) {

                    this.BT.setBackground(Color.GREEN);
                    available1.setText("Available");
                    BTT.setEnabled(true);
                    viewSigns.setText("Stop");

                    l.add(1);

                } else if (sensorsDATA.get(i).getType().equals("Electrocardiography")) {

                    this.PR.setBackground(Color.GREEN);
                    available.setText("Available");
                    PRT.setEnabled(true);
                    viewSigns.setText("Stop");
                    l.add(2);
                }
            }

            //Boucle for qui balaye les capteurs :
            r = new Runnable() {
                @Override
                public void run() {

                    //System.err.println("sensor 1");
                    commande = sensorsDATA.get(1).getCommande();
                    hc05Url = sensorsDATA.get(1).getHc05UR();
                    start(1);
                }
            };

            SwingUtilities.invokeLater(r);

        } else {
            stopViewing();
        }

    }//GEN-LAST:event_viewSignsMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void APActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_APActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_APActionPerformed

    private void saveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveMouseClicked
        // TODO add your handling code here:

        DateFormat format = new SimpleDateFormat();
        Date date = new Date();
        Timestamp timestamp = new Timestamp(date.getTime());
        String day = (timestamp.toString()).subSequence(0, 10).toString().replaceAll(" ", "");

        try {
            writer = new PrintWriter("Ressources/Vitals/" + (timestamp.toString()).subSequence(0, 10).toString().replaceAll(" ", "") + ".txt", "UTF-8");
            if (!AP.getText().equals("")) {
                writer.write("Arterial Pressure : " + AP.getText() + "\n");
            }

            if (!g.getText().equals("")) {
                writer.write("Glycimie : " + g.getText() + "\n");
            }

            if (!hr.getText().equals("")) {
                writer.write("Heart Rate : " + hr.getText() + "\n");
            }

            if (!imc.getText().equals("")) {
                writer.write("IMC : " + imc.getText() + "\n");
            }

            if (!t.getText().equals("")) {
                writer.write("Temperarture : " + t.getText() + "\n");
            }

            if (!bf.getText().equals("")) {
                writer.write("Breathing Frequency : " + bf.getText() + "\n");
            }

            if (!Height.getText().equals("")) {
                writer.write("Height : " + Height.getText() + "\n");
            }

            if (!weight.getText().equals("")) {
                writer.write("Weight : " + weight.getText() + "\n");
            }

            if (!comment.getText().equals("")) {
                writer.write("Comment : " + comment.getText() + "\n");
            }

            writer.close();
            alerte.setText("Vital signs saved in " + "Ressources/Vitals/" + (timestamp.toString()).subSequence(0, 10).toString().replaceAll(" ", "") + ".txt");

        } catch (IOException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_saveMouseClicked

    private void save1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_save1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_save1MouseClicked

    private void addMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addMouseClicked
        // TODO add your handling code here:
        if (symptomes.getSelectedValue() != null) {
            if (!addedSymptom.contains(symptomes.getSelectedValue())) {
                modelSymptom.addElement(symptomes.getSelectedValue());
                addedSymptom.add(symptomes.getSelectedValue());
            }
        }
    }//GEN-LAST:event_addMouseClicked

    private void remmoveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_remmoveMouseClicked
        // TODO add your handling code here:
        if (symptomes2.getSelectedValue() != null) {
            addedSymptom.remove(symptomes2.getSelectedValue());
            modelSymptom.removeElement(symptomes2.getSelectedValue());
        }

    }//GEN-LAST:event_remmoveMouseClicked

    private void saveAndSendMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveAndSendMouseClicked

        DateFormat format = new SimpleDateFormat();
        Date date = new Date();
        Timestamp timestamp = new Timestamp(date.getTime());
        String day = (timestamp.toString()).subSequence(0, 10).toString().replaceAll(" ", "");

        try {
            writer = new PrintWriter("Ressources/Vitals/" + (timestamp.toString()).subSequence(0, 10).toString().replaceAll(" ", "") + ".txt", "UTF-8");
            if (!AP.getText().equals("")) {
                writer.write("Arterial Pressure : " + AP.getText() + "\n");
            }

            if (!g.getText().equals("")) {
                writer.write("Glycimie : " + g.getText() + "\n");
            }

            if (!hr.getText().equals("")) {
                writer.write("Heart Rate : " + hr.getText() + "\n");
            }

            if (!imc.getText().equals("")) {
                writer.write("IMC : " + imc.getText() + "\n");
            }

            if (!t.getText().equals("")) {
                writer.write("Temperarture : " + t.getText() + "\n");
            }

            if (!bf.getText().equals("")) {
                writer.write("Breathing Frequency : " + bf.getText() + "\n");
            }

            if (!Height.getText().equals("")) {
                writer.write("Height : " + Height.getText() + "\n");
            }

            if (!weight.getText().equals("")) {
                writer.write("Weight : " + weight.getText() + "\n");
            }

            if (!comment.getText().equals("")) {
                writer.write("Comment : " + comment.getText() + "\n");
            }

            writer.close();

        } catch (IOException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }

        String str = "{\n"
                + "        \"date\": \"" + "\",\n"
                + "        \"patient\": {\n"
                + "            \"taille\": \"175\",\n"
                + "            \"poids\": \"75\",\n"
                + "            \"groupeSanguin\": \"O-\",\n"
                + "            \"adresseGateway\": \"192.168.1.104:8080\",\n"
                + "            \"idpersonne\": \"2\"\n"
                + "        },\n"
                + "        \"poids\": \"" + Height.getText() + "kg\",\n"
                + "        \"taille\": \"" + weight.getText() + "cm\",\n"
                + "        \"temperature\": \"" + t.getText() + "°C\",\n"
                + "        \"pouls\": \"" + hr.getText() + "bpm\",\n"
                + "        \"respiration\": \"" + bf.getText() + "\",\n"
                + "        \"imc\": \"" + imc.getText() + "\",\n"
               
                + "        \"tension\": \"" + AP.getText() + "\",\n"
                + "        \"glycemie\": \"" + g.getText() + "\",\n"
                
                + "        \"tourDeTaille\": \"\",\n"
                + "        \"tourDeTete\": \"\",\n"
                + "        \"commentaire\": \"" + comment.getText() + "\",\n"
                + "        \"statut\": \"FIN\",\n"
                + "        \"nomInfirmier\": \"\",\n"
                + "        \"idvitals\": \"\"\n"
                + "    }";
        
        Client client = ClientBuilder.newClient();
        Response r = client.target("http://"+"192.168.1.102:8080"+"/vitals").request(MediaType.APPLICATION_JSON).post(Entity.json(str));
        String s = r.readEntity(String.class);
        System.err.println(s);
        
        alerte.setText("Vital sent ;"+s);



    }//GEN-LAST:event_saveAndSendMouseClicked

    private void stopViewing() {
        timer.cancel();
        try {
            is.close();
            os.write("0".getBytes()); //50 en ASCII
            os.close();
            streamConnection.close();
        } catch (IOException ex) {
            Logger.getLogger(MySigns.class.getName()).log(Level.SEVERE, null, ex);
        }

        wait.setText("");

        viewSigns.setText("Start");
        viewSigns.setForeground(Color.green);
        this.BPT.setEnabled(false);
        this.BTT.setEnabled(false);
        this.GLT.setEnabled(false);
        this.PRT.setEnabled(false);
        this.RRT.setEnabled(false);
        viewSigns.setEnabled(true);

        available.setText("Not available");
        available1.setText("Not available");
        available2.setText("Not available");
        available3.setText("Not available");
        available4.setText("Not available");

        this.BP.setBackground(Color.red);
        this.BT.setBackground(Color.red);
        this.GL.setBackground(Color.red);
        this.PR.setBackground(Color.red);
        this.RR.setBackground(Color.red);

        jButton1.setVisible(true);
        jButton2.setVisible(true);
        jButton5.setVisible(true);
        jButton3.setVisible(true);
        jButton4.setVisible(true);
    }

    private synchronized void start(int t) {
        while (!test()) {
            lock();
        }
        try {
            streamConnection = (StreamConnection) Connector.open(hc05Url);
            if (streamConnection != null) {
                os = streamConnection.openOutputStream();
                is = streamConnection.openInputStream();
                os.write(commande.getBytes()); //"1"  pour prendre les mesures de temperatures;"2" pour ECG
                //Commence à recevoir from BT:
                System.err.println("Receiving ... ");
                wait.setText("Receiving DATA");
                int tempsDEcoute = 360;
                timer = new Timer();
                timer.scheduleAtFixedRate(new TimerTask() {

                    byte[] b = new byte[200];
                    String result = "";
                    int j = 0;
                    long t0 = System.currentTimeMillis();

                    @Override
                    public void run() {
                        //Buttons

                        if (System.currentTimeMillis() - t0 > tempsDEcoute * 1000) {
                            System.out.println("End Of Timer");
                            /*timer.cancel();
                            is.close();
                            os.write("0".getBytes()); //50 en ASCII
                            os.close();
                            streamConnection.close();*/
                            stopViewing();
                            unlock();

                        } else {

                            try {
                                is.read(b);
                                result = new String(b);

                                BTT.setText(result);
                                PRT.setText("0");
                                ;
                            } catch (IOException ex) {
                                Logger.getLogger(ReadFromSensor.class.getName()).log(Level.SEVERE, null, ex);
                            }

                        }
                    }
                }, 0, 1000);

            }

        } catch (IOException ex) {
            wait.setText("Can not reach Sensors");
            viewSigns.setText("Start");
            viewSigns.setForeground(Color.green);
            viewSigns.setEnabled(true);
            available.setText("Not available");
            available1.setText("Not available");
            available2.setText("Not available");
            available3.setText("Not available");
            available4.setText("Not available");

            this.BP.setBackground(Color.red);
            this.BT.setBackground(Color.red);
            this.GL.setBackground(Color.red);
            this.PR.setBackground(Color.red);
            this.RR.setBackground(Color.red);

            jButton1.setVisible(true);
            jButton2.setVisible(true);
            jButton5.setVisible(true);
            jButton3.setVisible(true);
            jButton4.setVisible(true);

            Logger.getLogger(ReadFromSensor.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private synchronized void lock() {
        Calcul = true;
    }

    private synchronized void unlock() {
        Calcul = false;
    }

    private synchronized boolean test() {
        if (Calcul == false) {
            return true;
        } else {
            return false;
        }
    }

    private Sensor searchSensorByName(String SensorName) throws FileNotFoundException {

        Sensor s = new Sensor();
        s.setName(SensorName);

        try {
            //Get Data du capteur :
            //Ouvertur du fichier :
            BufferedReader in = new BufferedReader(new FileReader("Ressources/SensorsData/" + SensorName + ".txt"));
            String line;
            int i = 0;
            while ((line = in.readLine()) != null) {
                i++;
                switch (i) {
                    case 2:
                        s.setCommande(line);
                        break;
                    case 3:
                        s.setType(line);
                        break;
                    case 4:
                        s.setCommunicationSupport(line);
                        break;
                    case 5:
                        if (s.getCommunicationSupport().equals("Bluetooth")) {

                            s.setHc05UR(line);

                            s.setBtspp((String) line.subSequence(8, 22));
                            if (((String) line.subSequence(36, 41)).equals("true")) {
                                s.setAuthenticate(true);
                            } else {
                                s.setAuthenticate(false);
                            }
                            if (((String) line.subSequence(50, 55)).equals("true")) {
                                s.setEncrypt(true);
                            } else {
                                s.setEncrypt(false);
                            }

                            if (((String) line.subSequence(63, 68)).equals("true")) {
                                s.setMaster(true);
                            } else {
                                s.setMaster(false);
                            }

                        }
                        break;
                    case 6:
                        s.setID(line);
                        break;
                }
            }

            return s;

        } catch (IOException ex) {
            Logger.getLogger(MySigns.class.getName()).log(Level.SEVERE, null, ex);
            return null;
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Home().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField AP;
    private javax.swing.JPanel BP;
    private javax.swing.JTextField BPT;
    private javax.swing.JPanel BT;
    private javax.swing.JTextField BTT;
    private javax.swing.JPanel GL;
    private javax.swing.JTextField GLT;
    private javax.swing.JTextField Height;
    private javax.swing.JPanel PR;
    private javax.swing.JTextField PRT;
    private javax.swing.JPanel RR;
    private javax.swing.JTextField RRT;
    private javax.swing.JTabbedPane Vitals;
    private javax.swing.JButton add;
    private javax.swing.JLabel alerte;
    private javax.swing.JLabel available;
    private javax.swing.JLabel available1;
    private javax.swing.JLabel available2;
    private javax.swing.JLabel available3;
    private javax.swing.JLabel available4;
    private javax.swing.JLabel available5;
    private javax.swing.JLabel available6;
    private javax.swing.JTextField bf;
    private javax.swing.JTextArea comment;
    private javax.swing.JTextField g;
    private javax.swing.JTextField hr;
    private javax.swing.JTextField imc;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator11;
    private javax.swing.JSeparator jSeparator12;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JSeparator jSeparator9;
    private javax.swing.JButton remmove;
    private javax.swing.JButton save;
    private javax.swing.JButton save1;
    private javax.swing.JButton saveAndSend;
    private javax.swing.JList<String> symptomes;
    private javax.swing.JList<String> symptomes2;
    private javax.swing.JTextField t;
    private javax.swing.JButton viewSigns;
    private javax.swing.JLabel wait;
    private javax.swing.JTextField weight;
    // End of variables declaration//GEN-END:variables
}
